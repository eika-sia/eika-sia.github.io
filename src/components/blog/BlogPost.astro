---
import { type CollectionEntry } from "astro:content";

type RenderablePost = CollectionEntry<'blog'> & { render: () => Promise<{ Content: any }> };

const post = (Astro.props as { post: RenderablePost }).post;
if (!post) {
  throw new Error("BlogPost: missing 'post' prop");
}
const { Content, headings } = await (post as any).render();
const rawHeadings = (headings || []) as any[];
const duplicateTitleHeading = rawHeadings[0] && rawHeadings[0].depth === 1 && rawHeadings[0].text?.trim() === post.data.title?.trim();

// Collect metadata items (no JSX in frontmatter)
// Gather raw metadata (rendered below with custom layout)
interface MetaPart { kind: 'date'|'read'|'tags'; value?: string; tags?: string[] }
const metaParts: MetaPart[] = [];
if (post.data.date) metaParts.push({ kind: 'date', value: new Date(post.data.date).toLocaleDateString(undefined,{year:'numeric',month:'short',day:'numeric'}) });
if (post.data.readTime) metaParts.push({ kind: 'read', value: `${post.data.readTime} min read` });
if (post.data.tags && post.data.tags.length > 0) metaParts.push({ kind: 'tags', tags: post.data.tags });
---

<article class:list={["mx-auto","px-5","md:px-8","lg:px-10","content-visibility-auto", duplicateTitleHeading && 'duplicate-heading-hidden']} style="max-width:clamp(680px,72ch,920px);">
  <!-- Back to Blog Link -->
  <div class="mb-6">
    <a
      href="/blog"
      class="text-violet-400 hover:text-violet-300 transition-colors text-sm"
    >
      ‚Üê Back to Blog
    </a>
  </div>

  <h1 class="text-3xl md:text-4xl font-semibold mb-4 text-slate-100 tracking-tight leading-tight">
    {post.data.title}
  </h1>
  <div class="header-accent-bar w-full mb-8"></div>
  <div class="post-meta mb-10">
    <div class="meta-primary">
      <span class="ml-3">{post.data.date}</span>
      {post.data.readTime && (
        <span class="read-pill" title="Estimated read time">{post.data.readTime} min</span>
      )}
    </div>
    {post.data.tags && post.data.tags.length > 0 && (
      <div class="tag-pills" aria-label="Tags">
        {post.data.tags.map(tag => (
          <span class="tag-pill">{tag}</span>
        ))}
      </div>
    )}
  </div>
  <div class="min-w-0 md-article prose prose-invert max-w-none">
    <Content />
  </div>
</article>

<style>
.md-article { --tw-prose-invert-links: var(--accent-soft); }
.duplicate-heading-hidden .md-article h1:first-of-type { display: none; }
.md-article pre { @apply border bg-slate-900 rounded-lg shadow-md shadow-black/30; background-color: rgba(15,23,42,0.8); border-color: var(--border-color); }
.md-article code:not(pre code) { @apply bg-slate-800/70 px-1.5 py-0.5 rounded; }
.md-article h2 { @apply mt-14 mb-4 text-2xl font-semibold tracking-tight; }
.md-article h3 { @apply mt-10 mb-3 text-xl font-semibold tracking-tight; }
.md-article h4 { @apply mt-8 mb-2 text-lg font-semibold tracking-tight; }
.md-article > p:first-of-type { @apply text-lg md:text-xl leading-relaxed text-slate-200; }
.md-article p { @apply leading-relaxed; }
.md-article a { @apply underline decoration-[var(--accent-soft)] decoration-2 underline-offset-2 hover:opacity-90 transition; }
/* New compact metadata styling (full-width bar now handled by global .header-accent-bar) */
.post-meta { display:flex; flex-direction:column; gap:.9rem; }
.meta-primary { display:flex; align-items:center; flex-wrap:wrap; gap:.55rem .9rem; font:600 11px/1.1 "JetBrains Mono",monospace; letter-spacing:.06em; }
.meta-primary > * { display:inline-flex; align-items:center; justify-content:center; }
.date-pill,.read-pill { background:rgba(30,36,50,.55); border:1px solid var(--border-color); padding:0.38rem .65rem .42rem; border-radius:var(--radius-pill); color:#e2e8f0; box-shadow:0 2px 4px -2px rgba(0,0,0,.55),0 0 0 1px rgba(255,255,255,.04); }
.read-pill { font-weight:500; color:#c7d2fe; }
.meta-primary > * + * { position:relative; }
.meta-primary > * + *:before { content:""; position:absolute; left:-.55rem; top:50%; width:4px; height:4px; background:#64748b; border-radius:50%; transform:translate(-50%,-50%); }
.tag-pills { display:flex; flex-wrap:wrap; gap:.65rem .75rem; }
.tag-pill { text-transform:uppercase; font:600 10px/1.05 "JetBrains Mono",monospace; letter-spacing:.12em; padding:.34rem .7rem .38rem; border-radius:var(--radius-pill); background:linear-gradient(150deg,rgba(111,99,216,.18),rgba(111,99,216,.06)); border:1px solid rgba(111,99,216,.35); color:#e2e8ff; position:relative; box-shadow:0 1px 3px -1px rgba(0,0,0,.55),0 0 0 1px rgba(255,255,255,.05); }
.tag-pill:before { content:'#'; opacity:.55; margin-right:.25rem; font-weight:400; }
.tag-pill:hover { background:linear-gradient(150deg,rgba(111,99,216,.28),rgba(111,99,216,.1)); border-color:rgba(111,99,216,.55); }
@media (min-width:640px){ .meta-primary{font-size:11.5px;} .tag-pill{font-size:10.2px;} }
@media (min-width:768px){ .meta-primary{font-size:12px;} .tag-pill{font-size:10.6px; padding:.36rem .78rem .4rem;} }
</style>
