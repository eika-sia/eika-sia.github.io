---
import { getCollection, type CollectionEntry } from "astro:content";
import Card from '../site/Card.astro';

const allProjects = await getCollection("projects");
// Prioritize ongoing first, then by date desc
const prioritized = allProjects.sort((a: CollectionEntry<"projects">, b: CollectionEntry<"projects">) => {
  const aOngoing = a.data.status === 'ongoing' ? 1 : 0;
  const bOngoing = b.data.status === 'ongoing' ? 1 : 0;
  if (aOngoing !== bOngoing) return bOngoing - aOngoing; // ongoing first
  return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
});
interface NormalizedProject {
  id: string;
  data: CollectionEntry<"projects">['data'];
  tags: string[];
  collaborators: string[];
  status?: string;
  category: string;
  categoryClasses: string;
}

const projects: NormalizedProject[] = prioritized.slice(0, 3).map((p: CollectionEntry<"projects">) => {
  const tags: string[] = Array.isArray(p.data.tags) ? p.data.tags : [];
  const collaborators: string[] = Array.isArray(p.data.collaborators) ? p.data.collaborators : [];
  const status = p.data.status as string | undefined;
  const category = tags.includes('research') ? 'research' : (tags.includes('hardware') ? 'hardware' : 'project');
  const categoryClasses = category === 'research'
    ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30'
    : category === 'hardware'
      ? 'bg-orange-500/20 text-orange-400 border border-orange-500/30'
      : 'bg-violet-500/20 text-violet-400 border border-violet-500/30';
  return { id: p.id, data: p.data, tags, collaborators, status, category, categoryClasses };
});
---

<div class="grid gap-10 md:grid-cols-2">
  {projects.map((project: NormalizedProject) => (
    <Card title={project.data.title} description={project.data.description} tags={project.tags}>
      <div class="text-sm text-slate-400 mb-4 mono">
        {project.status && <span class="text-violet-400">[{project.status.toUpperCase()}]</span>}
        <span class="ml-3">{project.data.date}</span>
      </div>
      <div class="text-base text-slate-300 mb-6">
        {project.collaborators.length > 0 && <>
        <span class="text-violet-400 font-semibold">Collaborators:</span> {project.collaborators.join(", ")}
        </>}
      </div>
      <div class="flex items-center gap-4">
        <span class={`px-3 py-2 rounded text-sm mono ${project.categoryClasses}`}>
          {project.category}
        </span>
        <a href={`/projects/${project.data.slug || project.id}`} class="text-violet-400 hover:text-violet-300 text-sm">
          View Details →
        </a>
      </div>
    </Card>
  ))}
</div>

<div class="mt-10 text-center">
  <a href="/projects" class="inline-block text-sm px-7 py-3 rounded-full border border-[var(--accent-soft)]/40 text-[var(--accent-soft)] tracking-wide hover:border-[var(--accent-soft)]/70 hover:text-[var(--accent)] bg-[rgba(18,22,32,0.55)] hover:bg-[rgba(18,22,32,0.75)] shadow-[0_0_0_1px_rgba(0,0,0,0.4),0_6px_22px_-10px_rgba(0,0,0,0.55)] hover:shadow-[0_0_0_1px_rgba(0,0,0,0.45),0_8px_28px_-8px_rgba(0,0,0,0.6)] transition-all focus:outline-none focus:ring-2 focus:ring-[var(--accent-soft)]/50 focus:ring-offset-0">See all projects →</a>
</div>
