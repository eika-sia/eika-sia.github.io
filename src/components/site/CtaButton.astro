---
interface Props { href: string; label: string; icon?: string; class?: string; size?: 'sm' | 'md' | 'lg'; }
const { href, label, icon = 'â†’', class: extraClass = '', size = 'sm' } = Astro.props as Props;

const sizeMap = {
  sm: 'px-6 md:px-7 py-2.5 md:py-3 text-[0.78rem] md:text-[0.85rem] min-w-[0] gap-2',
  md: 'px-10 md:px-12 py-4 md:py-5 text-[0.95rem] md:text-[1.05rem] min-w-[200px] gap-3',
  lg: 'px-16 md:px-20 py-7 md:py-8 text-[1.25rem] md:text-[1.6rem] min-w-[260px] gap-4'
} as const;

const sizing = sizeMap[size];

const base = `group relative inline-flex items-center justify-center rounded-none ${sizing} font-bold tracking-wide
text-[var(--text-strong)] bg-[linear-gradient(145deg,rgba(24,28,40,0.9)_0%,rgba(34,40,56,0.88)_55%,rgba(55,38,64,0.84)_100%)] backdrop-blur-xl border border-[var(--accent-soft)]/40 shadow-[0_6px_26px_-10px_rgba(0,0,0,0.78),0_0_0_1px_rgba(255,255,255,0.05)] transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-[var(--accent-soft)]/35 active:scale-[.967] hover:border-[var(--accent-soft)]/65 hover:shadow-[0_12px_34px_-12px_rgba(0,0,0,0.85),0_0_0_1px_rgba(255,255,255,0.06)] ${extraClass}`;
---
<a href={href} class={base}>
  <span class="relative flex items-center gap-inherit">
    <span class="relative drop-shadow-[0_2px_4px_rgba(0,0,0,0.6)]">{label}</span>
    <span class="opacity-60 group-hover:translate-x-1.5 group-hover:opacity-100 transition-transform">{icon}</span>
  </span>
</a>

<style>
/* Slight animation smoothing for smaller CTAs */
a.group { -webkit-tap-highlight-color: transparent; }
</style>
