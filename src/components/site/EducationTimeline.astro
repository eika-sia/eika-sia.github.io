---
import ProgressBar from '../site/ProgressBar.astro';
import HistoryItem from './HistoryItem.astro';
import educationData from '../../data/education.json';

interface EducationItem {
  institution: string;
  location: string;
  degree: string;
  start: string;
  end: string;
  gpa: string;
  ects: number;
  ectsTotal: number;
  focus: string;
  coursework: string[];
}

const educations: EducationItem[] = educationData as EducationItem[];
---

<div class="space-y-10">
  {educations.map((edu: EducationItem) => {
    let progress = Math.min(1, edu.ects / (edu.ectsTotal || 1));
    if (edu.ectsTotal === 0) {
      // If ectsTotal is 0, set progress to 1 (100%)
      progress = 1;
    }
    return (
      <HistoryItem
        title={edu.degree}
        org={edu.institution}
        location={edu.location}
        start={edu.start}
        end={edu.end}
        type="academic"
      >
        <div class="mt-5 space-y-5">
          <div>
            <div class="flex justify-between text-[10px] mono text-slate-500 mt-1">
              <span>{Math.round(progress * 100)}%</span>
              {edu.ectsTotal !== 0 && <span>{edu.ects} / {edu.ectsTotal} ECTS</span>}
            </div>
          </div>
          <div class="space-y-3">
            <p class="text-slate-300 text-sm md:text-base leading-relaxed">
              <span class="text-[var(--accent-soft)] font-semibold">Focus:</span> {edu.focus}
              <span class="ml-3 text-slate-500 text-xs">GPA {edu.gpa}</span>
            </p>
            {edu.coursework.length > 0 && (
              <div class="flex flex-wrap gap-2">
                {edu.coursework.map((course: string) => (
                  <span class="badge !text-[10px] md:!text-[11px] tracking-wide opacity-90">{course}</span>
                ))}
              </div>
            )}
          </div>
        </div>
      </HistoryItem>
    );
  })}
</div>
