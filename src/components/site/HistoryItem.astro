---
interface Props {
  title: string;
  org?: string;
  location?: string;
  start: string;
  end: string;
  type?: string; // category/type tag
  bullets?: string[];
}
const { title, org, location, start, end, type, bullets = [] } = Astro.props as Props;

const typeClass = type ? (
  type === 'ongoing' ? 'bg-green-500/20 text-green-400 border border-green-500/30' :
  type === 'academic' ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30' :
  type === 'volunteer' ? 'bg-purple-500/20 text-purple-400 border border-purple-500/30' :
  'bg-violet-500/20 text-violet-400 border border-violet-500/30'
) : '';
---
<article class="group relative rounded-2xl border border-[var(--accent-soft)]/15 bg-[rgba(18,22,32,0.38)] backdrop-blur-md p-6 md:p-7 transition-all hover:bg-[rgba(18,22,32,0.55)] hover:border-[var(--accent-soft)]/35">
  <div class="flex items-start justify-between gap-6 mb-4">
    <div class="flex-1 min-w-0">
      <h4 class="text-base font-semibold text-slate-100 tracking-tight mb-1">{title}</h4>
      {org && <p class="text-[var(--accent-soft)] text-sm mb-1 truncate">{org}</p>}
      {(location) && <p class="text-slate-500 text-xs">{location}</p>}
    </div>
    <div class="text-right text-xs text-slate-400 shrink-0">
      <div class="mono leading-tight">{start} – {end}</div>
      {type && (
        <span class={`mt-2 inline-block px-2 py-1 rounded mono text-[10px] tracking-wide ${typeClass}`}>
          {type}
        </span>
      )}
    </div>
  </div>
  {bullets.length > 0 && (
    <ul class="space-y-1 text-slate-300 text-sm">
      {bullets.map((b: string) => (
        <li class="flex gap-2 items-start">
          <span class="text-[var(--accent-soft)] mt-1">•</span>
          <span>{b}</span>
        </li>
      ))}
    </ul>
  )}
  <slot />
</article>
