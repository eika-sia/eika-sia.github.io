---
import BaseLayout from '../layouts/BaseLayout.astro';
import SectionHeader from '../components/site/SectionHeader.astro';
import EducationTimeline from '../components/site/EducationTimeline.astro';
import CurrentProjects from '../components/projects/CurrentProjects.astro';
import Highlights from '../components/projects/Highlights.astro';
---

<BaseLayout>
  <!-- Hero Section -->
  <section class="pt-10 md:pt-12 pb-10 text-center space-y-8">
    <div class="flex flex-col items-center gap-4">
      <div class="flex items-center gap-2 text-sm mono text-slate-500">
        <span class="text-[var(--accent)]">$</span>
        <span>whoami</span>
      </div>
      <h1 class="font-bold text-slate-100 leading-tight">Goran Ivanƒçiƒá</h1>
      <div class="text-xl md:text-2xl text-[var(--accent-soft)] min-h-[2.2rem] flex items-center justify-center">
        <span id="typewriter"></span>
        <span class="cursor-blink ml-1">‚ñä</span>
      </div>
      <p class="text-base md:text-lg max-w-2xl mx-auto text-slate-300 leading-relaxed">
        Exploring human cognition through computational neuroscience. Playing CTFs and learning operating systems on the side.
      </p>
      <div class="flex flex-wrap justify-center gap-4 md:gap-6 pt-2">
        <a href="mailto:goran.ivancic@fer.hr" class="badge text-[var(--accent-soft)] !text-xs px-5 py-3 flex items-center gap-2 hover:brightness-110 transition">
          <span>‚úâ</span> goran.ivancic@fer.hr
        </a>
        <a href="/cv" class="badge text-[var(--accent-soft)] !text-xs px-5 py-3 flex items-center gap-2 hover:brightness-110 transition">
          <span>üìÑ</span> CV
        </a>
      </div>
      <div class="text-xs md:text-sm text-slate-500 mono pt-2">
        Research interests: <span class="text-[var(--accent)]">Local neural dynamics ‚Ä¢ Computer architecture ‚Ä¢ Spatial cognition ‚Ä¢ Cryptography</span>
      </div>
    </div>
    <div class="header-accent-bar mx-auto w-56"></div>
  </section>

  <!-- Education Timeline/Progress -->
  <section class="max-w-4xl mx-auto mb-28">
    <SectionHeader title="Education" folder="learning" variant="bar" sub="Formal degree programs and academic progression." />
    <EducationTimeline />
  </section>

  <!-- Current Projects -->
  <section class="max-w-6xl mx-auto mb-28">
    <SectionHeader title="Current Research & Projects" folder="projects" variant="bar" sub="Active technical & neuroscience initiatives." />
    <CurrentProjects />
  </section>

  <!-- Publications -->
  <section class="max-w-6xl mx-auto mb-8">
    <SectionHeader title="Publications" folder="extras" variant="bar" />
    <Highlights />
  </section>
</BaseLayout>

<style>
  @keyframes cursor-blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }
  
  .cursor-blink {
    animation: cursor-blink 1s infinite;
  }
</style>

<script>
  interface TypewriterOptions {
    typeSpeed?: number;
    deleteSpeed?: number;
    pauseTime?: number;
    deleteDelay?: number;
  }

  class Typewriter {
    private element: HTMLElement;
    private roles: string[];
    private roleIndex: number = 0;
    private charIndex: number = 0;
    private isDeleting: boolean = false;
    private isPaused: boolean = false;
    private typeSpeed: number;
    private deleteSpeed: number;
    private pauseTime: number;
    private deleteDelay: number;
    
    constructor(element: HTMLElement, roles: string[], options: TypewriterOptions = {}) {
      this.element = element;
      this.roles = roles;
      
      // Timing options (in milliseconds)
      this.typeSpeed = options.typeSpeed || 120;
      this.deleteSpeed = options.deleteSpeed || 80;
      this.pauseTime = options.pauseTime || 2500;
      this.deleteDelay = options.deleteDelay || 1800;
      
      this.type();
    }
    
    private type(): void {
      const currentRole = this.roles[this.roleIndex];
      
      if (this.isPaused) {
        setTimeout(() => {
          this.isPaused = false;
          this.isDeleting = true;
          this.type();
        }, this.deleteDelay);
        return;
      }
      
      if (this.isDeleting) {
        // Remove characters
        this.element.textContent = currentRole.substring(0, this.charIndex - 1);
        this.charIndex--;
        
        if (this.charIndex === 0) {
          this.isDeleting = false;
          this.roleIndex = (this.roleIndex + 1) % this.roles.length;
        }
        
        setTimeout(() => this.type(), this.deleteSpeed);
      } else {
        // Add characters
        this.element.textContent = currentRole.substring(0, this.charIndex + 1);
        this.charIndex++;
        
        if (this.charIndex === currentRole.length) {
          this.isPaused = true;
        }
        
        setTimeout(() => this.type(), this.typeSpeed);
      }
    }
  }
  
  // Initialize the typewriter when the page loads
  document.addEventListener('DOMContentLoaded', () => {
    const typewriterElement = document.getElementById('typewriter');
    if (typewriterElement) {
      new Typewriter(typewriterElement, [
        'Neuroscientist',
        'CTF player', 
        'Psychologist',
        'Computer Engineer'
      ], {
        typeSpeed: 100,     // Slightly faster typing
        deleteSpeed: 60,    // Faster deletion
        pauseTime: 2500,    // Longer pause to read
        deleteDelay: 1800   // Delay before deleting
      });
    }
  });
</script>
